// GENERATED by @edgedb/generate v0.5.3

import * as $ from '../reflection';
import * as _ from '../imports';
import type * as _std from './std';
export declare type $MovieλShape = $.typeutil.flatten<
	_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
		actors: $.LinkDesc<$Person, $.Cardinality.Many, {}, false, false, false, false>;
		title: $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
	}
>;
declare type $Movie = $.ObjectType<
	'default::Movie',
	$MovieλShape,
	null,
	[
		..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
		{ title: { __element__: _std.$str; __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne } }
	]
>;
declare const $Movie: $Movie;

declare const Movie: $.$expr_PathNode<$.TypeSet<$Movie, $.Cardinality.Many>, null>;

export declare type $PersonλShape = $.typeutil.flatten<
	_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
		name: $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
		'<actors[is Movie]': $.LinkDesc<$Movie, $.Cardinality.Many, {}, false, false, false, false>;
		'<actors': $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false, false, false>;
	}
>;
declare type $Person = $.ObjectType<'default::Person', $PersonλShape, null, [..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__']]>;
declare const $Person: $Person;

declare const Person: $.$expr_PathNode<$.TypeSet<$Person, $.Cardinality.Many>, null>;

export { $Movie, Movie, $Person, Person };

declare type __defaultExports = {
	Movie: typeof Movie;
	Person: typeof Person;
};
declare const __defaultExports: __defaultExports;
export default __defaultExports;
